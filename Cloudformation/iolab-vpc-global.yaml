AWSTemplateFormatVersion: 2010-09-09
Description: IO Lab VPC

Parameters:
  ProjectName:
    Description: project name
    Type: String
  BucketName:
    Description: Bucket name for app migration
    Type: String
  keypairName:
    Description: bastion key pair name
    Type: String
  bastionInstanceType:
    Description: bastion instance type
    Type: String
  bastionAmiId:
    Description: bastion AMI id
    Type: String
  bastionSourceIp:
    Description: Cidr block allowed to access bastion
    Type: String
  dbPort:
    Description: RDS db port
    Type: Number

Resources:
  vpc:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName}-vpc

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref vpc
      InternetGatewayId: !Ref InternetGateway

  NatGatewayEIPA:
    Type: AWS::EC2::EIP
    DependsOn: VPCGatewayAttachment
    Properties:
      Domain: vpc
      
  NatGatewayA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIPA.AllocationId
      SubnetId: !Ref SubnetPublicA
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName}-NatGatewayA
  
  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref vpc
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName}-RouteTablePublic

  RouteTablePublicInternetRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      
  RouteTablePrivate:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref vpc
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName}-RouteTablePrivate
        
  RouteTablePrivateInternetRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTablePrivate
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA

  SubnetPublicA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      CidrBlock: !Sub 10.0.0.0/24
      VpcId: !Ref vpc
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName}-SubnetPublicA

  SubnetPublicB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ]
      CidrBlock: !Sub 10.0.1.0/24
      VpcId: !Ref vpc
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName}-SubnetPublicB

  SubnetPrivateA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      CidrBlock: !Sub 10.0.2.0/24
      VpcId: !Ref vpc
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName}-SubnetPrivateA

  SubnetPrivateB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ]
      CidrBlock: !Sub 10.0.3.0/24
      VpcId: !Ref vpc
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName}-SubnetPrivateB

  RouteTableAssociationPublicA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublicA
      RouteTableId: !Ref RouteTablePublic

  RouteTableAssociationPublicB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublicB
      RouteTableId: !Ref RouteTablePublic

  RouteTableAssociationPrivateA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPrivateA
      RouteTableId: !Ref RouteTablePrivate
  
  RouteTableAssociationPrivateB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPrivateB
      RouteTableId: !Ref RouteTablePrivate

  albSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SecurityGroup for Application Load balancer
      VpcId: !Ref vpc
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName}-ALBSG

  BastionSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SecurityGroup for bastion
      VpcId: !Ref vpc
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: !Ref dbPort
        ToPort: !Ref dbPort
        CidrIp: !Ref bastionSourceIp
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref bastionSourceIp
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName}-BastionSG

  bastion:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref keypairName
      ImageId: !Ref bastionAmiId
      InstanceType: !Ref bastionInstanceType
      Monitoring: false
      SubnetId: !Ref SubnetPublicA
      SecurityGroupIds:
      - !Ref BastionSG
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName}-bastion

  eipBastion:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref bastion

  bucket:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: Private
      BucketName: !Ref BucketName

  serversAlarmSNS:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: !Sub ${ProjectName} instance status check failed
      Subscription:
      - Endpoint: benjamin.ehlers@hardis.fr #aws@io-lab.fr
        Protocol: email
      TopicName: !Sub ${ProjectName}-InstanceStatusCheckFailed
  
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Scheme: internet-facing
      Name: !Sub ${ProjectName}-ALB
      SecurityGroups:
        - !Ref albSG
      Subnets:
      - !Ref SubnetPublicA
      - !Ref SubnetPublicB
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName}-ALB

  HTTPALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ALB
      DefaultActions:
        -
          Type: fixed-response
          FixedResponseConfig:
            ContentType: text/plain
            MessageBody: Forbidden
            StatusCode: 403
      Port: 80
      Protocol: HTTP

  # HTTPSALBListener:
  #   Type: AWS::ElasticLoadBalancingV2::Listener
  #   Properties:
  #     LoadBalancerArn: !Ref ALB
  #     DefaultActions:
  #       -
  #         Type: fixed-response
  #         FixedResponseConfig:
  #           ContentType: text/plain
  #           MessageBody: Forbidden
  #           StatusCode: 403
  #     Port: 443
  #     Protocol: HTTPS
  #     Certificates: 
  #     - CertificateArn: !Ref iolabCertificate

Outputs:
  IOLABVPC:
    Description: IOLAB VPC
    Value: !Ref vpc

  IOLABRouteTablePublic:
    Description: IOLAB Public Route table
    Value: !Ref RouteTablePublic

  ALBSG:
    Description: IOLAB Application load balancer Security group
    Value: !Ref albSG

  OutSubnetPublicA:
    Description: Subnet Public A
    Value: !Ref SubnetPublicA

  OutSubnetPublicB:
    Description: Subnet Public B
    Value: !Ref SubnetPublicB

  OutSubnetPrivateA:
    Description: Subnet Private A
    Value: !Ref SubnetPrivateA

  OutSubnetPrivateB:
    Description: Subnet Private B
    Value: !Ref SubnetPrivateB

  OutBastionSG:
    Description: Bastion security group
    Value: !Ref BastionSG

  OutBastionEIP:
    Description: Bastion IP
    Value: !Ref eipBastion

  OutHTTPALBListener:
    Description: HTTP ALB Listener
    Value: !Ref HTTPALBListener

  # OutHTTPSALBListener:
  #   Description: HTTPS ALB Listener
  #   Value: !Ref HTTPSALBListener