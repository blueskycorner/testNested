AWSTemplateFormatVersion: 2010-09-09
Description: App Migration - Server & RDS & ALB Rules

Parameters:
  appName:
    Description: Application Name
    Type: String
  keypairNameDevPreprod:
    Description: Dev & Preprod key pair name
    Type: String
  keypairNameProd:
    Description: Prod key pair name
    Type: String
  serverInstanceType:
    Description: server instance type
    Type: String
  serverAmiId:
    Description: server AMI id
    Type: String
  serverSubnetId:
    Description: server subnet id
    Type: String
  devPreprodSG:
    Description: Dev & Preprod security group
    Type: String
  prodSG:
    Description: Prod security group
    Type: String
  rdsSubnets:
    Description: RDS Subnets
    Type: CommaDelimitedList
  rdsDevPreProdSG:
    Description: RDS Dev & Preprod security group
    Type: String
  rdsProdSG:
    Description: RDS security group
    Type: String
  dbAllocatedStorage:
    Description: RDS allocated storage
    Type: Number
  dbInstanceClass:
    Description: RDS instance class
    Type: String
  dbBackupRetentionPeriod:
    Description: RDS backup retention period
    Type: Number
  dbNamePreprod:
    Description: RDS db name for the preprod DB
    Type: String
  dbNameProd:
    Description: RDS db name for the prod DB
    Type: String
  dbEngine:
    Description: RDS db engine
    Type: String
  dbEngineVersion:
    Description: RDS db engine version
    Type: String
  dbMasterUsername:
    Description: RDS master user name
    Type: String
  rdsDevPreprodMasterUserPasswordParameter:
    Description: RDS master password parameter for preprod
    Type: String
  rdsProdMasterUserPasswordParameter:
    Description: RDS master password parameter for prod
    Type: String
  dbPort:
    Description: RDS db port
    Type: Number
  dbStorageType:
    Description: RDS storage type
    Type: String
  preferredBackupWindow:
    Description: RDS prefered backup window
    Type: String
  preferredMaintenanceWindow:
    Description: RDS prefered maintenance window
    Type: String
  devPreprodDomainName:
    Description: Boiron domain name
    Type: String
  prodDomainName:
    Description: Boiron domain name
    Type: String
  vpc:
    Description: VPC
    Type: String
  HTTPALBListener:
    Description: HTTP ALB listener
    Type: String
  HTTPSALBListener:
    Description: HTTPS ALB listener
    Type: String
  serversAlarmSNS:
    Description: SNS Topic to send email
    Type: String
  albDnsName:
    Description: Application DNS Name
    Type: String
  BucketName:
    Description: Bucket name for cloudfront
    Type: String

Resources:

  devPreprod:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref keypairNameDevPreprod
      ImageId: !Ref serverAmiId
      InstanceType: !Ref serverInstanceType
      Monitoring: false
      SubnetId: !Ref serverSubnetId
      SecurityGroupIds:
      - !Ref devPreprodSG
      Tags:
      - Key: Name
        Value: !Sub ${appName}-devPreprod
      - Key: SCHEDULING
        Value: Standard

  prod:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref keypairNameProd
      ImageId: !Ref serverAmiId
      InstanceType: !Ref serverInstanceType
      Monitoring: false
      SubnetId: !Ref serverSubnetId
      SecurityGroupIds:
      - !Ref prodSG
      Tags:
      - Key: Name
        Value: !Sub ${appName}-prod

  prodAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn: prod
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref serversAlarmSNS
      AlarmDescription: Alarm when instance not responding
      AlarmName: !Sub ${appName}-ProdInstanceCheck
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
      - Name: InstanceId
        Value: !Ref prod
      EvaluationPeriods: 3
      MetricName: StatusCheckFailed_Instance
      Namespace: AWS/EC2
      Period: 60
      Statistic: SampleCount
      Threshold: 1.0
      TreatMissingData: notBreaching

  RDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: RDS Subnet Group
      SubnetIds: !Ref rdsSubnets

  rdsDevPreprod:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: !Ref dbAllocatedStorage
      DBInstanceClass: !Ref dbInstanceClass
      BackupRetentionPeriod: !Ref dbBackupRetentionPeriod
      DBName: !Ref dbNamePreprod
      DBSubnetGroupName: !Ref RDSSubnetGroup
      Engine: !Ref dbEngine
      EngineVersion: !Ref dbEngineVersion
      MasterUsername: !Ref dbMasterUsername
      MasterUserPassword: !Join
      - ''
      - - "{{resolve:ssm-secure:"
        - !Ref rdsDevPreprodMasterUserPasswordParameter
        - ":1}}"
      MultiAZ: false
      Port: !Ref dbPort
      PubliclyAccessible: false
      StorageEncrypted: false
      StorageType: !Ref dbStorageType
      VPCSecurityGroups: 
      - !Ref rdsDevPreProdSG
      PreferredBackupWindow: !Ref preferredBackupWindow
      PreferredMaintenanceWindow: !Ref preferredMaintenanceWindow

  rdsProd:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: !Ref dbAllocatedStorage
      DBInstanceClass: !Ref dbInstanceClass
      BackupRetentionPeriod: !Ref dbBackupRetentionPeriod
      DBName: !Ref dbNameProd
      DBSubnetGroupName: !Ref RDSSubnetGroup
      Engine: !Ref dbEngine
      EngineVersion: !Ref dbEngineVersion
      MasterUsername: !Ref dbMasterUsername
      MasterUserPassword: !Join
      - ''
      - - "{{resolve:ssm-secure:"
        - !Ref rdsProdMasterUserPasswordParameter
        - ":1}}"
      MultiAZ: false
      Port: !Ref dbPort
      PubliclyAccessible: false
      StorageEncrypted: false
      StorageType: !Ref dbStorageType
      VPCSecurityGroups: 
      - !Ref rdsProdSG
      PreferredBackupWindow: !Ref preferredBackupWindow
      PreferredMaintenanceWindow: !Ref preferredMaintenanceWindow

  # Rules for HTTP
  DevPreprodHTTPALBRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref HTTPALBListener
      Priority: 2
      Conditions:
        -
          Field: host-header
          Values: 
          - !Sub ${devPreprodDomainName}
      Actions:
        -
          Type: forward
          TargetGroupArn: !Ref DevPreprodHTTPTarget

  ProdHTTPALBRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref HTTPALBListener
      Priority: 1
      Conditions:
        -
          Field: host-header
          Values: 
          - !Sub ${prodDomainName}
      Actions:
        -
          Type: forward
          TargetGroupArn: !Ref ProdHTTPTarget

  # Targets for HTTP
  DevPreprodHTTPTarget:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: devPreprod
    Properties:
      VpcId: !Ref vpc
      TargetType: instance
      Port: 80
      Protocol: HTTP
      Name: !Sub ${appName}-DevPreprodHTTPTarget
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 20
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 3
      Targets:
      - Id: !Ref devPreprod

  ProdHTTPTarget:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: prod
    Properties:
      VpcId: !Ref vpc
      TargetType: instance
      Port: 80
      Protocol: HTTP
      Name: !Sub ${appName}-ProdHTTPTarget
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 20
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 3
      Targets:
      - Id: !Ref prod

  # Rules for HTTPS
  DevPreprodHTTPSALBRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref HTTPSALBListener
      Priority: 2
      Conditions:
        -
          Field: host-header
          Values: 
          - !Sub ${devPreprodDomainName}
      Actions:
        -
          Type: forward
          TargetGroupArn: !Ref DevPreprodHTTPSTarget

  ProdHTTPSALBRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref HTTPSALBListener
      Priority: 1
      Conditions:
        -
          Field: host-header
          Values: 
          - !Sub ${prodDomainName}
      Actions:
        -
          Type: forward
          TargetGroupArn: !Ref ProdHTTPSTarget

  # Targets for HTTPS
  DevPreprodHTTPSTarget:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: devPreprod
    Properties:
      VpcId: !Ref vpc
      TargetType: instance
      Port: 81 # TODO replace by 443
      Protocol: HTTP # TODO replace by HTTPS
      Name: !Sub ${appName}-DevPreprodHTTPSTarget
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 20
      HealthCheckPath: /
      HealthCheckProtocol: HTTP # TODO replace by HTTPS
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 3
      Targets:
      - Id: !Ref devPreprod

  ProdHTTPSTarget:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: prod
    Properties:
      VpcId: !Ref vpc
      TargetType: instance
      Port: 81 # TODO replace by 443
      Protocol: HTTP # TODO replace by HTTPS
      Name: !Sub ${appName}-ProdHTTPSTarget
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 20
      HealthCheckPath: /
      HealthCheckProtocol: HTTP # TODO replace by HTTPS
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 3
      Targets:
      - Id: !Ref prod

  cloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !Ref albDnsName
            Id: albOrigin
            CustomOriginConfig:
              OriginProtocolPolicy: match-viewer
        DefaultCacheBehavior: 
          AllowedMethods:
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          TargetOriginId: albOrigin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        Logging:
          IncludeCookies: true
          Bucket: !Sub ${BucketName}.s3.amazonaws.com
          Prefix: !Sub ${appName}-CloudfrontLogs
        # ViewerCertificate:
        #   AcmCertificateArn: !Ref iolabCertificate
        #   SslSupportMethod: sni-only

Outputs:
  OutRdsDevPreprodEndpoint:
    Description: RDS Dev & Preprod Endpoint
    Value: !GetAtt rdsDevPreprod.Endpoint.Address

  OutRdsProdEndpoint:
    Description: RDS Prod Endpoint
    Value: !GetAtt rdsProd.Endpoint.Address

  OutDevPreproIP:
    Description: Prod IP
    Value: !GetAtt devPreprod.PrivateIp

  OutProdIP:
    Description: Prod IP
    Value: !GetAtt prod.PrivateIp

  OutCloudfrontDistribution:
    Description: CloudFrontDistribution Domain Name
    Value: !GetAtt cloudfrontDistribution.DomainName